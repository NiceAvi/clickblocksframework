<?php
/**
 * ClickBlocks.PHP v. 1.0
 *
 * Copyright (C) 2014  SARITASA LLC
 * http://www.saritasa.com
 *
 * This framework is free software. You can redistribute it and/or modify
 * it under the terms of either the current ClickBlocks.PHP License
 * viewable at theclickblocks.com) or the License that was distributed with
 * this file.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY, without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You should have received a copy of the ClickBlocks.PHP License
 * along with this program.
 *
 * Responsibility of this file: dbwriter.php
 *
 * @category   DB
 * @package    DB
 * @copyright  2007-2014 SARITASA LLC <info@saritasa.com>
 * @link       http://www.saritasa.com
 * @since      File available since Release 1.0.0
 */

namespace ClickBlocks\DB\Sync;

/**
 * Base class for all classes changing database structure.
 *
 * @abstract
 */
abstract class DBWriter implements IWriter
{
  /**
   * The instance of ClickBlocks\DB\Sync\DBCore class. 
   *
   * @var ClickBlocks\DB\Sync\DBCore $db
   * @access protected
   */
  protected $db =  null;
  
  /**
   * Array of SQL queries, generated by synchronizer when changing the database structure.
   *
   * @var array $queries
   * @access protected
   */
  protected $queries = array();
  
  /**
   * Constructor.
   *
   * @param ClickBlocks\DB\Sync\DBCore $db
   * @access public
   */
  public function __construct(DBCore $db)
  {
    $this->db = $db;
    $this->queries = array();
  }
  
  /**
   * Returns array of queries, generated by synchronizer when changing the database structure.
   *
   * @return array
   * @access public
   */
  public function getQueries()
  {
    return $this->queries;
  }
  
  /**
   * Executes specified SQL query. 
   *
   * @param PDO $pdo
   * @param string $class - class of the query.
   * @param string $type - type of the query.
   * @param array $params - parameters of the query.
   * @access protected
   */
  protected function setData(\PDO $pdo, $class, $type, array $params = null)
  {
    $sql = $this->db->getSQL($class, $type, $params);
    $this->queries[] = $sql;
    $pdo->prepare($sql)->execute();
  }
}